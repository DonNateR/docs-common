.. _devguide-common-pagination:

======================
Pagination of requests
======================

To reduce load on the service, list operations return a maximum number of items at a time. This is referred to as pagination. 

You can set the following parameters in the URI:

-  ``limit``

The ``limit`` parameter sets the maximum number of items returned. If the client requests a limit beyond the the number of items supported by the service, an overLimit (413) response code is returned.

-  ``marker``

The ``marker`` parameter is the ID of the last item in the previous list. If the Id specified is invalid, a badRequest (400) response code is returned. If a marker beyond the end of a list is given, an empty list is returned. Note that the list operations never return itemNotFound (404) response codes.

.. Check with your development teams about whether they support page_reverse for pagination.

-  ``page_reverse``(for Cloud Networks only)

.. Check with your development teams about whether they support offset for pagination.

-  ``offset``

The ``offset`` parameter is the starting point for the return data.

For example, an offset of 50 specifies that the items that are returned should start with the number 51 (since the numbering is one-based).

These parameters are optional. If the client requests a limit beyond the maximum limit configured by the deployment, the service returns the number of items equal to the maximum limit.

For example, the following request returns up to 100 pages, starting with the item with ID=1234, and ``page_reverse`` is turned off:

.. code::  

    ?limit=100&marker=1234&page_reverse=False

.. Check with your development teams about whether they support next and previous links for pagination.

For convenience, list responses contain ``next`` links and ``previous`` links. The last page in the collection will not contain a ``next`` link.

..include: <product-specific-pagination-operations>.txt